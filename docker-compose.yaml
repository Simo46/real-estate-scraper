services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: real_estate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/databases/postgres/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5444:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d real_estate"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:8
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-secret}
    volumes:
      - mongo_data:/data/db
    ports:
      - "27018:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6389:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    build: ./services/nlp-service
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    dns:
      - 8.8.8.8
      - 1.1.1.1
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s  # Tempo di attesa prima di iniziare l'healthcheck

  api-gateway:
    build: ./services/api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://app_user:app_password@postgres:5432/real_estate
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-secret}@mongodb:27017
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
      - ./services/api-gateway/.env:/app/.env:ro

volumes:
  postgres_data:
  mongo_data:
  redis_data:
  ollama_data: